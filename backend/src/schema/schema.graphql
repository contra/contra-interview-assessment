type User {
  id: ID!
  givenName: String
  familyName: String
  emailAddress: String
  createdAt: String
  updatedAt: String
}

type FeatureFlag {
  id: ID!
  key: String
  value: String
  type: String
  createdAt: String
  updatedAt: String
}

type UserFeatureFlag {
  id: ID!
  override: String
  createdAt: String
  updatedAt: String
}

# Feature flags for a single user
type TargetUsersResponse {
  userId: ID!
  featureFlag: UserFeatureFlag!
}

input UserFeatureFlagInput {
  id: ID!
  override: String
}

input TargetUsersInput {
  userId: ID!
  featureFlags: [UserFeatureFlagInput!]!
}

type UserWithFlag {
  userId: ID!
  featureFlags: [FeatureFlag]!
}

type Mutation {
  targetUsers(data: [TargetUsersInput]): [TargetUsersResponse!]!
}

type Query {
  usersWithFlags: [UserWithFlag]!
}
