type FeatureFlag {
  description: String
  id: String!
  name: String!
  type: String!
}

enum FlagType {
  BOOLEAN
  MULTIVARIANT
}

scalar JSON

type Mutation {
  setUsersFeatureFlag(input: setUsersFeatureFlagInput!): SuccessPayload!
  updateUserFlag(input: updateUserFlagInput!): SuccessPayload!
}

type Query {
  getFeatureFlags: [FeatureFlag!]!
  getUsers: [User!]!
}

input setUsersFeatureFlagInput {
  featureFlagId: String!
  userIds: [String!]!
  value: JSON!
}

type SuccessPayload {
  success: Boolean!
}

input updateUserFlagInput {
  featureFlagId: String!
  userId: String!
  value: JSON!
}

type User {
  email_address: String!
  family_name: String!
  feature_flags: [UserFlag!]!
  given_name: String!
  id: String!
}

type UserFlag {
  featureFlag: FeatureFlag!
  id: String!
  user: User!
  value: JSON!
}
