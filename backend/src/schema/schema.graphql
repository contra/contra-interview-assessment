type Mutation {
  sampleMutation: String!
}

type Query {
  hello: String!
}
# Schema definitions to identify user and mutate feature flags
type User {
    id: ID!
    given_name: String!
    family_name: String!
    email_address: String!
    created_at: Int!
    updated_at: Int!
    featureFlags: [FeatureFlag!]!
  }

type FeatureFlag {
  id: ID!
  name: String!
  value: Boolean!
}

type UserWithFeatureFlag {
  user: User!
  featureFlag: FeatureFlag!
}

type Query {
  users: [User!]!
  feature: [FeatureFlag!]!
}

type Mutation {
  assignFlag(userId: ID!, featureFlagId: ID!): User
  changeFlag(userId: ID!, featureFlagId: ID!, value: Boolean!): FeatureFlag
}
