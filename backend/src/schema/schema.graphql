type Mutation {
  sampleMutation: String!
  setUsersFeatureFlag(userIds: [String!]!, featureFlagData: UserFeatureFlagData!): [SetUserFeatureFlagResponse!]!
  removeUsersFeatureFlag(userIds: [String!]!, featureFlagKey: String!): [RemoveUserFeatureFlagResponse!]!
}

type Query {
  hello: String!
  featureFlags: [FeatureFlag!]
  users: [User!]
}

scalar FeatureFlagValue
scalar FeatureFlagType

type FeatureFlag {
  flagKey: String!
  flagType: FeatureFlagType!
  defaultValue: FeatureFlagValue
}

type FeatureFlagUserValue {
  userId: String!
  flagKey: String!
  flagType: FeatureFlagType!
  flagValue: FeatureFlagValue
}

type SetUserFeatureFlagResponse {
  userId: String!
  result: String!
}

type RemoveUserFeatureFlagResponse {
  userId: String!
  result: String!
}

type User {
  userId: Int!
  givenName: String!
  familyName: String!
  emailAddress: String!
  featureFlags: [FeatureFlagUserValue]
}

input UserFeatureFlagData {
  flagKey: String!
  flagValue: FeatureFlagValue
}
