{
	// ALL SNIPETS FOR R3F and REACT
	"Basic r3f scene": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "tjs",
		"body": [
			"import React from 'react';",
			"import * as three from 'three';",
			"import { Plane } from '@react-three/drei';",
			"import { useThree } from '@react-three/fiber';\n",
			"const $1 = () => {\n",
			"\t$0\n",
			"\treturn(",
			"\t\t<mesh position={[0,0,0]} >",
			"\t\t\t<Plane>",
			"\t\t\t\t<meshBasicMaterial color={'red'} />",
			"\t\t\t</Plane>",
			"\t\t</mesh>",
			"\t)",
			"}\n",
			"export default $1;",
		],
		"description": "Basic r3f scene"
	},
	"r3f canvas scene": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "tjc",
		"body": [
			"import React, {Suspense} from 'react';",
			"import * as three from 'three';",
			"import { Loader } from '@react-three/drei';",
			"import { Canvas } from '@react-three/fiber';\n",
			"import $2 from './$2'\n",
			"const $1 = () => {\n",
			"\t$0\n",
			"\treturn(",
			"\t\t<div style={{ width: '100%', height: '100vh', position: 'fixed', top: 0, left: 0, outline: 'none' }} >",
			"\t\t\t<Canvas >",
			"\t\t\t\t<Suspense fallback={<Loader />}>",
			"\t\t\t\t\t <$2/>",
			"\t\t\t\t</Suspense>",
			"\t\t\t</Canvas>",
			"\t\t</div>",
			"\t)",
			"}\n",
			"export default $1;",
		],
		"description": "r3f canvas scene"
	},
	"useFrame": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "uf",
		"body": [
			"$2useFrame(($1) => {",
			"\t$0",
			"})"
		],
		"description": "useFrame"
	},
	"useEffect": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "ue",
		"body": [
			"$3useEffect(() => {",
			"\t$0",
			"}${1:,[$2]})"
		],
		"description": "useEffect"
	},
	"shader r3f component": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "tsc",
		"body": [
			"import React from 'react';",
			"import * as three from 'three';",
			"import { Plane } from '@react-three/drei';",
			"import { extend, useThree } from '@react-three/fiber';\n",
			"import $2 from '../../shaders/$3'\n",
			"extend({ $2 })\n",
			"const $1 = () => {\n",
			"\tconst { viewport } = useThree()\n",
			"\treturn (",
			"\t\t<mesh position={[0,0,0]} >",
			"\t\t\t<Plane args={[ viewport.width, viewport.heigh ]}>",
			"\t\t\t\t<$4$2/>",
			"\t\t\t</Plane>",
			"\t\t</mesh>",
			"\t)",
			"}\n\n",
			"export default $1;"
		],
		"description": "shader r3f component"
	},
	"React component": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "rc",
		"body": [
			"import React from 'react';\n\n",
			"const $1 = () => {\n\n",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t$2",
			"\t\t</div>",
			"\t)",
			"}\n\n",
			"export default $1;"
		],
		"description": "React component"
	},
	"shader component": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "sc",
		"body": [
			"import * as three from 'three';",
			"import { shaderMaterial } from '@react-three/drei';;",
			"import glsl from 'babel-plugin-glsl/macro.js';\n\n",
			"const $1 = shaderMaterial(\n",
			"\t{ $2 },\n",
			"\t// Vertex Shader",
			"\t glsl`",
			"\t\tvarying vec2 vuv;\n",
			"\t\tvoid main(){\n",
			"\t\t\tvec4 modelPosition = modelMatrix * vec4(position, 1.0);\n",
			"\t\t\t$3\n",
			"\t\t\t// Final",
			"\t\t\tvec4 viewPosition = viewMatrix * modelPosition;",
			"\t\t\tvec4 projectedPosition = projectionMatrix * viewPosition;",
			"\t\t\tgl_Position = projectedPosition;\n",
			"\t\t\t// Props",
			"\t\t\tvuv = uv;",
			"\t}`,\n",
			"\t// Fragment Shader",
			"\t glsl`",
			"\t\tvarying vec2 vuv;",
			"\t\tvoid main(){\n",
			"\t\t\tvec2 xy = vuv -.5;\n",
			"\t\t\t$4\n",
			"\t\t\tvec3 col = vec3(1.,0.,0.);\n",
			"\t\t\t// Final",
			"\t\t\tgl_FragColor = vec4(col, 1.);",
			"\t}`\n",
			");\n\n",
			"export default $1;"
		],
		"description": "shader component"
	},
	"useState": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "us",
		"body": [
			"const [$1,set$2] = $4useState($3)$0"
		],
		"description": "useState"
	},
	"useRef": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "ur",
		"body": [
			"const $1 = $2useRef($3)$0"
		],
		"description": "useRef"
	},
	"console.log()": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "cl",
		"body": [
			"console.log(`${1:Here}`,$2)$0"
		],
		"description": "console.log()"
	},
	"useControls": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "uc",
		"body": [
			" const $1 = $7useControls({ $2: { value: $3, min: ${4:0}, max: ${5:1}, step: ${6:.001}}, $8 });$0"
		],
		"description": "useControls"
	},
	"useControls add": {
		"scope": "javascript,typescript,react,typescriptreact",
		"prefix": "ac",
		"body": [
			"\n$1: { value: $2, min: ${3:0}, max: ${4:1}, step: ${5:.001}}, $6"
		],
		"description": "useControls"
	},
}